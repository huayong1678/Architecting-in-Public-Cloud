AWSTemplateFormatVersion: "2010-09-09"
Description: "A Sample YAML for CloudFormation in Module 6"

Parameters:
  AmazonLinuxFreeTierAMI:
    Description: "Amazon Linux 2 AMI Free tier eligible"
    Type: AWS::EC2::Image::Id
    Default: ami-0c2b8ca1dad447f8a

Resources:

  # Network - VPC
  SimpleVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16" # Required
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: "Name"
          Value: "simple-VPC"

  # Network - Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      CidrBlock: "10.0.0.0/24" # Required
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "public-subnet-1"
      VpcId: !Ref SimpleVPC # Required
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1b"
      CidrBlock: "10.0.1.0/24" # Required
      Tags:
        - Key: "Name"
          Value: "public-subnet-2"
      VpcId: !Ref SimpleVPC # Required

  # Network - Internet Gateway
  SimpleIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "simple-internetgateway"
  SimpleIGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref SimpleIGW
      VpcId: !Ref SimpleVPC

  # Network - Route Table
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SimpleVPC

  # Network - Routes
  RouteToIGW:
    Type: AWS::EC2::Route
    DependsOn: SimpleIGW
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SimpleIGW
      RouteTableId: !Ref PublicSubnetRouteTable

  Public1SNRouteTableCon:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetRouteTable

  Public2SNRouteTableCon:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicSubnetRouteTable

  AllowWebAndSSHForPublicSubnet:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow Web And SSH For Public Subnet Instances" # Required
      GroupName: "simple-publicsubnet-sg"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref SimpleVPC
  AllowLocalInPublicSubnetSG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref AllowWebAndSSHForPublicSubnet
      IpProtocol: -1 # Required
      SourceSecurityGroupId: !Ref AllowWebAndSSHForPublicSubnet

  # Compute - EC2 Instaces
  SimpleWebServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t2.micro"
      SubnetId: !Ref PublicSubnet1
      
      ImageId: !Ref AmazonLinuxFreeTierAMI

      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 10
      
      SecurityGroupIds:
        - !Ref AllowWebAndSSHForPublicSubnet
      KeyName: vockey
      
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
          yum install -y httpd git
          systemctl start httpd
          systemctl enable httpd
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www
          chmod 2775 /var/www
          find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;
          echo "<h1>EC2:1</h1>" > /var/www/html/test.html

      Tags:
        - Key: Name
          Value: Simple-Webserver-1
  
  SimpleWebServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t2.micro"
        
      ImageId: !Ref AmazonLinuxFreeTierAMI
        
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 10
        
      KeyName: vockey

      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          GroupSet: 
            - !Ref AllowWebAndSSHForPublicSubnet
          SubnetId: !Ref PublicSubnet2

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
          yum install -y httpd git
          systemctl start httpd
          systemctl enable httpd
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www
          chmod 2775 /var/www
          find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;
          echo "<h1>EC2:2</h1>" > /var/www/html/test.html

      Tags:
        - Key: Name
          Value: Simple-Webserver-2

  # HA - Load Balancer
  SimpleWebServerLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: "Simple-LB"
      Scheme: internet-facing
      SecurityGroups:
        - !Ref AllowWebAndSSHForPublicSubnet
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: "Simple-LB"
      Type: application

  SimpleWebServerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn:
            Ref: SimpleWebServerTG
      LoadBalancerArn: !Ref SimpleWebServerLB # Required
      Port: 80
      Protocol: HTTP

  SimpleWebServerTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Name: "Simple-LB-TG"
      Port: 80
      Protocol: HTTP
      Targets:
        - Id: !Ref SimpleWebServer1
        - Id: !Ref SimpleWebServer2
      Tags:
        - Key: Name
          Value: "Simple-LB-TG"
      VpcId: !Ref SimpleVPC

Outputs:
  # EC2 #1 - IP address
  Instance1IP:
    Description: "#1 EC2 IP address"
    Value: !GetAtt SimpleWebServer1.PublicIp
  Instance1IPPrivate:
    Description: "#2 EC2 Private IP address"
    Value: !GetAtt SimpleWebServer1.PrivateIp
  # EC2 #2 - IP address
  Instance2IP:
    Description: "#2 EC2 IP address"
    Value: !GetAtt SimpleWebServer2.PublicIp
  Instance2IPPrivate:
    Description: "#2 EC2 Private IP address"
    Value: !GetAtt SimpleWebServer2.PrivateIp
  # ELB - DNS
  LoadBalancerDNSName:
    Description: The DNSName of the load balancer
    Value: !GetAtt SimpleWebServerLB.DNSName